"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/llm";
exports.ids = ["pages/api/llm"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fllm&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fllm.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fllm&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fllm.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/llm.js */ \"(api-node)/./pages/api/llm.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/llm\",\n        pathname: \"/api/llm\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_llm_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/llm\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/llm\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fllm&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fllm.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/llm.js":
/*!**************************!*\
  !*** ./pages/api/llm.js ***!
  \**************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([node_fetch__WEBPACK_IMPORTED_MODULE_0__]);\nnode_fetch__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Levenshtein distance function for fuzzy matching\nfunction levenshtein(a, b) {\n    const matrix = Array.from({\n        length: b.length + 1\n    }, ()=>Array(a.length + 1).fill(0));\n    for(let i = 0; i <= b.length; i++)matrix[i][0] = i;\n    for(let j = 0; j <= a.length; j++)matrix[0][j] = j;\n    for(let i = 1; i <= b.length; i++){\n        for(let j = 1; j <= a.length; j++){\n            matrix[i][j] = b[i - 1] === a[j - 1] ? matrix[i - 1][j - 1] : 1 + Math.min(matrix[i - 1][j - 1], matrix[i][j - 1], matrix[i - 1][j]);\n        }\n    }\n    return matrix[b.length][a.length];\n}\nfunction findClosestTool(tools, input) {\n    let closest = null;\n    let minDist = Infinity;\n    for (const t of tools){\n        const dist = levenshtein(t.name.toLowerCase(), input.toLowerCase());\n        if (dist < minDist) {\n            minDist = dist;\n            closest = t;\n        }\n    }\n    return closest;\n}\nconst MCP_URL = process.env.MCP_SERVER_URL || 'http://localhost:3001/mcp';\nfunction jsonRpcRequest(method, params = {}, id = '1') {\n    return {\n        jsonrpc: '2.0',\n        id,\n        method,\n        params\n    };\n}\nfunction summarizeToolResult(result) {\n    if (!result?.content || !Array.isArray(result.content)) {\n        return 'No content returned from tool.';\n    }\n    try {\n        const jsonText = result.content[0]?.text || '';\n        const parsed = JSON.parse(jsonText);\n        if (parsed.code && parsed.message && parsed.data) {\n            const itemsCount = Array.isArray(parsed.data) ? parsed.data.length : 'unknown number of';\n            return `Result: Code ${parsed.code} (${parsed.message}), contains ${itemsCount} item(s).`;\n        }\n        return 'Tool call returned data but summary not implemented for this format.';\n    } catch  {\n        return `Result text: ${result.content[0]?.text?.slice(0, 300) || '[empty]'}`;\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== 'POST') return res.status(405).json({\n        error: 'Method Not Allowed'\n    });\n    const { prompt } = req.body;\n    if (!prompt) return res.status(400).json({\n        error: 'Prompt is required'\n    });\n    try {\n        const toolsListReq = jsonRpcRequest('tools/list');\n        const toolsListResponse = await (0,node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MCP_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json, text/event-stream'\n            },\n            body: JSON.stringify(toolsListReq)\n        });\n        const toolsListText = await toolsListResponse.text();\n        let toolsListJson = null;\n        try {\n            if (toolsListText.startsWith('event:')) {\n                const lines = toolsListText.split('\\n');\n                const dataLine = lines.find((line)=>line.startsWith('data:'));\n                if (dataLine) {\n                    toolsListJson = JSON.parse(dataLine.replace(/^data:\\s*/, ''));\n                }\n            } else {\n                toolsListJson = JSON.parse(toolsListText);\n            }\n        } catch (e) {\n            return res.status(500).json({\n                error: 'Failed to parse MCP tools/list response'\n            });\n        }\n        if (!toolsListJson?.result?.tools || toolsListJson.result.tools.length === 0) {\n            return res.status(500).json({\n                error: 'No tools available from MCP server.'\n            });\n        }\n        if (prompt.trim().toLowerCase() === 'list tools') {\n            const toolsListRaw = JSON.stringify(toolsListReq, null, 2);\n            const summaryMessage = `MCP server offers ${toolsListJson.result.tools.length} tool(s): ${toolsListJson.result.tools.map((t)=>t.name).join(', ')}`;\n            return res.status(200).json({\n                toolsList: toolsListJson.result.tools.map((t)=>t.name),\n                toolsListRaw,\n                toolsListResponse: toolsListText,\n                summaryMessage\n            });\n        }\n        const closestTool = findClosestTool(toolsListJson.result.tools, prompt.trim());\n        if (!closestTool) {\n            return res.status(400).json({\n                error: 'No matching tool found.'\n            });\n        }\n        const args = {};\n        if (closestTool.inputSchema?.properties) {\n            for (const [key, prop] of Object.entries(closestTool.inputSchema.properties)){\n                if (prop.default !== undefined) args[key] = prop.default;\n                else if (prop.type === 'string') args[key] = '';\n                else if (prop.type === 'number' || prop.type === 'integer') args[key] = 0;\n                else if (prop.type === 'boolean') args[key] = false;\n                else args[key] = null;\n            }\n        }\n        const toolsCallReq = jsonRpcRequest('tools/call', {\n            name: closestTool.name,\n            arguments: args\n        });\n        const toolsCallResponse = await (0,node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MCP_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json, text/event-stream'\n            },\n            body: JSON.stringify(toolsCallReq)\n        });\n        const toolsCallResponseText = await toolsCallResponse.text();\n        let toolsCallJson = null;\n        try {\n            if (toolsCallResponseText.startsWith('event:')) {\n                const lines = toolsCallResponseText.split('\\n');\n                const dataLine = lines.find((line)=>line.startsWith('data:'));\n                if (dataLine) {\n                    toolsCallJson = JSON.parse(dataLine.replace(/^data:\\s*/, ''));\n                }\n            } else {\n                toolsCallJson = JSON.parse(toolsCallResponseText);\n            }\n        } catch (e) {\n            return res.status(500).json({\n                error: 'Failed to parse MCP tools/call response'\n            });\n        }\n        if (toolsCallJson.error) {\n            return res.status(400).json({\n                error: toolsCallJson.error.message || 'Error from MCP'\n            });\n        }\n        const summaryMessage = summarizeToolResult(toolsCallJson.result);\n        return res.status(200).json({\n            chosenTool: closestTool.name,\n            toolsCallRequestRaw: JSON.stringify(toolsCallReq, null, 2),\n            toolsCallResponseRaw: toolsCallResponseText,\n            summaryMessage,\n            matchedToolName: closestTool.name,\n            inputArguments: args,\n            parsedResult: toolsCallJson.result\n        });\n    } catch (error) {\n        console.error('Error in /api/llm:', error);\n        return res.status(500).json({\n            error: 'Internal Server Error'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/llm.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("node-fetch");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fllm&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fllm.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();